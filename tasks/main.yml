---

- name: install spack prerequisites
  package:
    name: git,python3,make,tar,gzip,bzip2,xz,zstd,patch,curl,unzip

- name: install system-package-manager compiler packages
  package:
    name: "{{ item.system_pkg }}"
  loop: "{{ spack_system_compilers }}"

- name: clone spack repo
  git:
    repo: https://github.com/spack/spack.git
    dest: "{{ spack_root }}"
    version: "{{ spack_version }}"
    depth: "1"
  run_once: true
  become_user: "{{ spack_owner }}"

- name: add system-package-manager compilers to spack # NB added to root's spack config so installs must use become
  shell:
    cmd: "{% if item.module %}module load {{ item.module }} && {% endif %}{{ spack_cmd }} compiler find --scope site"
    executable: "/usr/bin/bash"
  register: compiler_find
  changed_when: "'Found no new compilers' not in compiler_find.stdout"
  loop: "{{ spack_system_compilers }}"
  environment:
    BASH_ENV: /opt/ohpc/admin/lmod/lmod/init/bash 
    MODULEPATH: /opt/ohpc/pub/modulefiles
  run_once: true
  become_user: "{{ spack_owner }}"

- name: find user's home directory
  shell:
    cmd: "getent passwd {{ item }} | cut -d ':' -f 6"
  loop: "{{ spack_users }}"
  register: spack_user_homedirs

- name: modify users .bashrc
  blockinfile:
    path: "{{ item.stdout }}/.bashrc"
    create: false
    block: |
      export SPACK_ROOT={{ spack_root }}
      . $SPACK_ROOT/share/spack/setup-env.sh
      module use $SPACK_ROOT/share/spack/lmod/linux*/Core/
    insertafter: "# User specific aliases and functions"
  loop: "{{ spack_user_homedirs.results }}"
  run_once: true # NB: assumes home is on shared filesystem if role run on multiple hosts

- name: modify system profile
  blockinfile:
    path: "/etc/profile.d/spack.sh"
    create: true
    block: |
      export SPACK_ROOT={{ spack_root }}
      . $SPACK_ROOT/share/spack/setup-env.sh
      module use $SPACK_ROOT/share/spack/lmod/linux*/Core/
  when: spack_users | length == 0

- name: create spack modules config
  copy:
    dest: "{{ spack_root }}/etc/spack/modules.yaml"
    content: "{{ spack_module_config }}"
  run_once: true
  become_user: "{{ spack_owner }}"

- name: install spack compilers
  shell:
    cmd: "{{ spack_cmd }} install {{ item }}"
  loop: "{{ spack_compilers }}"
  register: spack_install_compilers
  failed_when: "'failed' in spack_install_compilers.stderr or spack_install_compilers.rc != 0"
  changed_when: "'Installing' in spack_install_compilers.stdout"
  run_once: true
  become_user: "{{ spack_owner }}"

- name: add spack_compilers compilers to spack # NB added to root's spack config so installs must use become
  shell:
    cmd: "{{ spack_cmd }} compiler find --scope site $({{ spack_cmd }} location -i {{ item }})"
    executable: "/usr/bin/bash"
  register: spack_compiler_find
  changed_when: "'Found no new compilers' not in spack_compiler_find.stdout"
  loop: "{{ spack_compilers }}"
  run_once: true
  become_user: "{{ spack_owner }}"

- name: install spack packages
  shell:
    cmd: "{{ spack_cmd }} install {{ item }}"
  loop: "{{ spack_packages }}"
  register: spack_install_packages
  failed_when: "'failed' in spack_install_packages.stderr or spack_install_packages.rc != 0"
  changed_when: "'Installing' in spack_install_packages.stdout"
  run_once: true
  become_user: "{{ spack_owner }}"

- name: create module tree
  shell:
    cmd: "{{ spack_cmd }} module lmod refresh -y" # TODO: idempotency? think we'd have to hash the tree or something
  run_once: true
  become_user: "{{ spack_owner }}"
